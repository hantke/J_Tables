###########################################################################################################
################################################ Package ##################################################
#Main Libs
import numpy as np 
from numpy.linalg import norm
################################################ Parameters ##################################################
p0 = 0.681
p1 = 0.089
q0 = -8.013
q1 = -0.775
a0 = 0.71 

#TEST
M = 1e12
a = 0.8

################################################ Functions ##################################################
def NoLin_Eq_simpler(a,k,i,A0):#k,i
    return np.where( a > A0, i, k*(a-A0)+i)
def CT_theorical_j(M,a):
	logM = np.log10(M+1e-10)
	p = NoLin_Eq_simpler(a,p1,p0,a0)
	q = NoLin_Eq_simpler(a,q1,q0,a0)
	return 10**(p*logM+q)
############################################### Read ###################################################

print "log(M/h^-1 Msun) = ",'%.1f' % np.log10(M),"   &   a = ",'%.1f' % a,'====> j / (Mpc/h km/s) = ','%.2f' % CT_theorical_j(M,a)


